// SECTION: Columns
// FEATURE: Auto columns

// @for $i from 1 through $column-count {
//   .#{$row}.\:auto-col-#{$i} > * {
//     @media #{$pc-large} {
//       $calculated-column-count: round($i * 4/6);
//       @if $calculated-column-count > $column-count {
//         $calculated-column-count: $column-count;
//       }
//       flex-basis: (100% / $column-count) * $calculated-column-count;
//     }
//     @media #{$pc},#{$large-tablet} {
//       $calculated-column-count: $i;
//       flex-basis: (100% / $column-count) * $calculated-column-count;
//     }
//     @media #{$large-tabletB} {
//       $calculated-column-count: round($i * 12/6);
//       @if $calculated-column-count > $column-count {
//         $calculated-column-count: $column-count;
//       }
//       flex-basis: (100% / $column-count) * $calculated-column-count;
//     }
//   }
// }

@for $i from 1 through $column-count {
  .#{$row}.\:col-#{$i} > * {
    flex-basis: 100% / $column-count * $i;
  }
}

// FEATURE: Specific columns

@each $name, $size in map-get($responsive-map, $column-count) {
  @media #{$size} {
    @for $i from 1 through $column-count {
      .#{$row}.\:col-#{$i}-#{$name} > * {
        flex-basis: 100% / $column-count * $i;
      }
    }
  }
}

@if $mock-media {
  @for $i from 1 through $column-count - 1 {
    $proportional-map: map-get($responsive-map, $i);
    .\:media-col-#{$i} {
      @each $name, $size in $proportional-map {
        @media #{$size} {
          @for $j from 1 through $column-count {
            .#{$row}.\:col-#{$j}-#{$name} > * {
              flex-basis: 100% / $column-count * $j;
              &:before {
                content: "#{$name}";
                display: block;
              }
            }
          }
        }
      }
    }
  }
}

// FEATURE: Mock device size

// .#{$row}.\:col-#{$i} > * {
//   flex-basis: 100% / $column-count * $i;
// }
// }
